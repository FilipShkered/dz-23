{"version":3,"file":"app.js","sources":["app.js"],"sourcesContent":["class TodoApi {\n    static API = 'https://642ffaafc26d69edc88806d4.mockapi.io/api/todo'\n\n    static getList() {\n        return fetch(TodoApi.API)\n            .then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n\n                throw new Error('Can not retrive todo list from server');\n            })\n    }\n\n    static create(todo) {\n        return fetch(TodoApi.API, {\n                method: 'POST',\n                body: JSON.stringify(todo),\n                headers: {\n                    'Content-type': 'application/json',\n                }\n            })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n\n                throw new Error('Can not create todo on server');\n            })\n    }\n\n    static delete(id) {\n        return fetch(`${TodoApi.API}/${id}`, {\n                method: 'DELETE',\n            })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n\n                throw new Error('Can not delete todo from server');\n            })\n    }\n\n    static update(id, data) {\n        return fetch(`${TodoApi.API}/${id}`, {\n                method: 'PUT',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-type': 'application/json'\n                }\n            })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                throw new Error('Failed to update todo item on server');\n            });\n    }\n}\nclass Collection {\n    static DEFAULT_TODO = {\n    done: false,\n  }\n  #todoList = []\n\n  fetch() {\n    return TodoApi\n      .getList()\n      .then((list) => {\n        this.#todoList = list\n      })\n  }\n\n  create(todo) {\n     return TodoApi\n      .create({\n        ...Collection.DEFAULT_TODO,\n        ...todo,\n      })\n      .then((newTodo) => {\n        this.addListItem(newTodo)\n\n        return newTodo\n      })\n  }\n\n  update(id, todo) {\n    return TodoApi\n      .update(id, todo)\n      .then((newTodo) => {\n        this.editListItem(id, newTodo)\n\n        return newTodo\n      })\n  }\n\n  delete(id) {\n    this.deleteListItem(id)\n    TodoApi.delete(id)\n\n    return Promise.resolve()\n  }\n\n  getList() {\n    return this.#todoList\n  }\n\n  deleteListItem(id) {\n    this.#todoList = this.#todoList\n      .filter(todoItem => todoItem.id !== id)\n  }\n\n  editListItem(id, todo) {\n    this.#todoList = this.#todoList\n      .map(todoItem => todoItem.id === id ? todo : todoItem)\n  }\n\n  addListItem(todo) {\n    this.#todoList.push(todo)\n  }\n\n  find(id) {\n    return this.#todoList.find(todo => todo.id === id)\n  }\n}\nclass TodoFormView {\n    constructor(options) {\n        this.$form = this.init()\n        this.$inputs = this.$form.find('input')\n        this.options = options\n    }\n\n    init() {\n        return $(`<form id=\"todoForm\">\n        <input id=\"id\" type=\"hidden\">\n        <input class=\"input\" id=\"message\" type=\"text\" placeholder=\"Что нужно сделать?\" />\n        <button class=\"msgButton\" id=\"msgButton\">Отправить</button>\n    </form>`)\n\n            .on('submit', this.onFormSubmit.bind(this))\n\n\n    }\n\n    onFormSubmit(e) {\n        e.preventDefault()\n\n        const data = this.getData()\n\n        if (!this.isTodoValid(data)) {\n            this.showError(new Error('Поле не может быть пустым'))\n            return\n        }\n\n        this.options.onSubmit(data)\n    }\n\n\n    isTodoValid(todo) {\n        return todo.message !== ''\n    }\n\n\n    appendTo($el) {\n        $el.append(this.$form)\n    }\n\n    getData() {\n\n        const data = {};\n\n        for (const input of this.$inputs) {\n            data[input.id] = input.value;\n            \n        }\n        return data\n    }\n\n    setData(data) {\n\n        for (const input of this.$inputs) {\n            input.value = data[input.id];\n\n            console.log(data);\n        }\n\n    }\n\n    clearData() {\n        for (const input of this.$inputs) {\n            input.value = ''\n        }\n    }\n\n    showError(error) {\n        alert(error.message)\n    }\n\n}\nclass TodoListView {\n\n    static CLASS_DONE = '.done'\n    static TODO_ITEM = '.todoItem'\n    static DELETE_BTN = '.deleteBtn'\n    static EDIT_BTN = '.editBtn'\n\n    constructor(options) {\n        this.$listEl = this.init()\n        this.options = options\n    }\n\n    init() {\n        return $(`<div class=\"todo\"><ul id=\"todoList\"></ul></div>`)\n            .on('click', TodoListView.DELETE_BTN, this.onDelBtnClick.bind(this))\n            .on('click', TodoListView.EDIT_BTN, this.onEditBtnClick.bind(this))\n            .on('click', TodoListView.TODO_ITEM, this.onTodoItemClick.bind(this))\n    }\n\n    onDelBtnClick(e) {\n        e.stopPropagation()\n        const id = this.getTodoElId(e.target)\n\n        this.options.onDelete(id)\n    }\n\n    onEditBtnClick(e) {\n        e.stopPropagation()\n        const id = this.getTodoElId(e.target)\n\n        this.options.onEdit(id)\n    }\n\n    onTodoItemClick(e) {\n        const id = this.getTodoElId(e.target)\n\n        this.options.onToggle(id)\n        console.log(id);\n    }\n\n    getTodoElId(el) {\n        return el.closest(TodoListView.TODO_ITEM).dataset.id\n    }\n\n    appendTo($el) {\n        $el.append(this.$listEl);\n\n    }\n\n    renderTodoList(list) {\n        const html = list.map(this.genTodoHtml).join('')\n\n        this.$listEl.html(html)\n    }\n\n    replaceTodo(id, todo) {\n        const oldTodoEl = this.$listEl.find(`[data-id=\"${id}\"]`)\n        const newTodoEl = this.genTodoHtml(todo)\n\n        oldTodoEl.replaceWith(newTodoEl)\n    }\n\n    writeTodo(todo) {\n\n        const html = this.genTodoHtml(todo)\n\n        this.$listEl.append(html)\n    }\n\n    genTodoHtml(todo) {\n        const done = todo.done ? ' done' : ''\n        return `\n            <li\n                class=\"todoItem${done}\"\n                data-id=\"${todo.id}\"\n            >\n                <span>${todo.message}</span>\n                <button class=\"editBtn\">Edit</button>\n                <button class=\"deleteBtn\">Delete</button>\n            </li>`;\n    }\n\n    removeTodo(id) {\n        this.$listEl.find(`[data-id=\"${id}\"]`).remove()\n    }\n}\nclass Controller {\n    \n    constructor($rootEl) {\n\n        this.todoCollection = new Collection()\n        this.todoFormView = new TodoFormView({\n                onSubmit: this.save.bind(this)\n            }),\n            this.todoListView = new TodoListView({\n                onDelete: this.delTodoElem.bind(this),\n                onEdit: (id) => {\n                    const todo = this.todoCollection.find(id)\n\n                    this.todoFormView.setData(todo)\n                },\n                onToggle: this.todoDone.bind(this)\n            })\n\n        this.todoFormView.appendTo($rootEl)\n        this.todoListView.appendTo($rootEl)\n\n\n\n\n        this.todoCollection.fetch().then(() => {\n            this.todoListView.renderTodoList(this.todoCollection.getList())\n        })\n    }\n\n    save(todo) {\n        if (todo.id) {\n\n            this.todoCollection.update(todo.id, todo)\n                .then((newTodo) => {\n                    this.todoListView.replaceTodo(todo.id, newTodo)\n                    this.todoFormView.clearData()\n\n                })\n                .catch(e => showError(e))\n        } else {\n            this.todoCollection.create(todo)\n              \n                .then((newTodo) => {\n                    this.todoListView.writeTodo(newTodo)\n                    this.todoFormView.clearData()\n\n                })\n                .catch((e) => {\n                    showError(e)\n                })\n        }\n    }\n\n\n    delTodoElem(id) {\n        this.todoCollection.delete(id).catch(e => showError(e))\n\n        this.todoListView.removeTodo(id)\n    }\n\n   todoDone(id) {\n    const todo = this.todoCollection.find(id)\n    if (todo) {\n        todo.done = !todo.done\n\n        this.todoCollection\n            .update(id, todo)\n            .catch(e => this.showError(e))\n\n        this.todoListView.replaceTodo(id, todo)\n    } else {\n        console.error(`Todo item with ID ${id} not found.`)\n    }\n}\n\n\n    showError(e) {\n        alert(e.message)\n    }\n}\nconst $rootEl = $('#root')\n\nconst controller = new Controller($rootEl)"],"names":["TodoApi","API","getList","fetch","then","res","ok","json","Error","create","todo","method","body","JSON","stringify","headers","Content-type","delete","id","update","data","Collection","DEFAULT_TODO","done","#todoList","this","list","addListItem","newTodo","editListItem","deleteListItem","Promise","resolve","filter","todoItem","map","push","find","TodoFormView","constructor","options","$form","init","$inputs","$","on","onFormSubmit","bind","e","preventDefault","getData","isTodoValid","onSubmit","showError","message","appendTo","$el","append","input","value","setData","console","log","clearData","error","alert","TodoListView","CLASS_DONE","TODO_ITEM","DELETE_BTN","EDIT_BTN","$listEl","onDelBtnClick","onEditBtnClick","onTodoItemClick","stopPropagation","getTodoElId","target","onDelete","onEdit","onToggle","el","closest","dataset","renderTodoList","html","genTodoHtml","join","replaceTodo","oldTodoEl","newTodoEl","replaceWith","writeTodo","removeTodo","remove","Controller","$rootEl","todoCollection","todoFormView","save","todoListView","delTodoElem","todoDone","catch","controller"],"mappings":"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"}